/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}body,html{margin:0;padding:0;background-color:#4aa272;font-family:Roboto,sans-serif;font-weight:300;width:100%;height:100%}body{display:-webkit-box;display:flex}.wrapper-form{width:45%;background:#fff;box-shadow:0 2px 4px rgba(0,0,0,.4);margin:auto}.tabs-register-box{display:-webkit-box;display:flex;list-style-type:none;padding:0;margin:0;position:relative}.tabs-register-box li{display:-webkit-box;display:flex;width:100%;height:540px}.tabs-register-box li>input{display:none}.tabs-register-box li>label{width:100%;text-align:center;height:100px;font-size:30px;font-weight:700;line-height:100px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-transition:.5s;transition:.5s}.tabs-register-box li>label:hover{background-color:#d9d9d9}.tabs-register-box li:last-child>label{border-right-width:1px}.tabs-register-box .tab-content{display:none;position:absolute;padding-top:50px}.tabs-register-box li>input:checked+label{background-color:#e1e1e1;color:#fff}.tabs-register-box li>input:checked~.tab-content{display:block}.input-login-form,.input-register-form{display:block;margin:90px 45px 0;width:80%}.input-login-form label,.input-register-form label{font-size:16px;font-weight:700;text-transform:uppercase}.input-login-form input[type=password],.input-login-form input[type=text],.input-register-form input[type=password],.input-register-form input[type=text]{display:block;box-sizing:border-box;margin-bottom:45px;padding:13px 2px;width:100%;height:50px;border:none;border-bottom:1px solid #aaa;font-family:Roboto,sans-serif;font-weight:400;font-size:15px;-webkit-transition:.6s;transition:.6s;outline:0}.input-login-form input[type=password]:focus,.input-login-form input[type=text]:focus,.input-register-form input[type=password]:focus,.input-register-form input[type=text]:focus{border-bottom:2px solid #16a085;color:#16a085;-webkit-transition:.2s;transition:.2s}.input-login-form input[type=password]::-webkit-input-placeholder,.input-login-form input[type=text]::-webkit-input-placeholder,.input-register-form input[type=password]::-webkit-input-placeholder,.input-register-form input[type=text]::-webkit-input-placeholder{color:#4aa272}.input-login-form input[type=password]::-moz-placeholder,.input-login-form input[type=text]::-moz-placeholder,.input-register-form input[type=password]::-moz-placeholder,.input-register-form input[type=text]::-moz-placeholder{color:#4aa272}.input-login-form input[type=password]:-ms-input-placeholder,.input-login-form input[type=text]:-ms-input-placeholder,.input-register-form input[type=password]:-ms-input-placeholder,.input-register-form input[type=text]:-ms-input-placeholder{color:#4aa272}.input-login-form .link-btn,.input-register-form .link-btn{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;padding-top:30px}.input-login-form .link-btn a,.input-register-form .link-btn a{color:#c7dee8;text-decoration:none;-webkit-transition:.5s;transition:.5s}.input-login-form .link-btn a:hover,.input-register-form .link-btn a:hover{color:#7fb3ca}.input-login-form .link-btn .signin-btn,.input-register-form .link-btn .signin-btn{border:transparent;outline:0;color:#fff;background-color:#4aa272;font-size:18px;padding:14px 35px;cursor:pointer;-webkit-transition:.5s;transition:.5s}.input-login-form .link-btn .signin-btn:hover,.input-register-form .link-btn .signin-btn:hover{background-color:#429066}.input-register-form{margin-left:-43%}.input-register-form label{font-size:16px;font-weight:700;text-transform:uppercase}.input-register-form .signin-btn{padding:18px 12px;margin:-20px auto auto;display:block;background-color:#4aa272;outline:0;border:transparent;color:#fff;font-size:18px;cursor:pointer;-webkit-transition:.5s;transition:.5s}.input-register-form .signin-btn:hover{background-color:#429066}.signin{display:-webkit-box;display:flex;background-color:#3064a0;width:100%;height:70px;position:relative;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center}.signin .facebook-icon{position:absolute;top:0;left:0;width:140px;height:100%}.signin .facebook-icon a{display:block;background:#2b5a90;height:100%;-webkit-transition:.5s;transition:.5s}.signin .facebook-icon a:hover{background-color:#254e7c}.signin .facebook-icon a i{color:#fff;font-size:35px;padding:12px 58px}.signin .facebook-text{font-size:18px;color:#fff;text-decoration:none;opacity:.7;-webkit-transition:.5s;transition:.5s}.signin .facebook-text:hover{opacity:.4}.signin .facebook-white-text{color:#fff}.signin:last-child{background-color:#c84a4b}.signin:last-child .google-icon{display:block;position:absolute;top:0;left:0;width:140px;height:100%;color:#fff;background:#c84a4b}.signin:last-child .google-icon a{display:block;background:#b04847;height:100%;-webkit-transition:.5s;transition:.5s}.signin:last-child .google-icon a:hover{background-color:#9e4140}.signin:last-child .google-icon a i{color:#fff;font-size:35px;padding:12px 58px}.signin:last-child .google-text{font-size:18px;color:#fff;text-decoration:none;opacity:.7;-webkit-transition:.5s;transition:.5s}.signin:last-child .google-text:hover{opacity:.4}.signin:last-child .google-white-text{color:#fff}@media screen and (max-width:1200px){.wrapper-form{width:55%}}@media screen and (max-width:992px){.wrapper-form{width:65%}}@media screen and (max-width:768px){.wrapper-form{width:75%}.wrapper-form .facebook-text,.wrapper-form .google-text{padding-left:50px}}@media screen and (max-width:600px){.wrapper-form{width:90%}.wrapper-form .facebook-text,.wrapper-form .google-text{padding-left:70px}}@media screen and (max-width:479px){body{background:#fff}.wrapper-form{width:100%;margin-top:0}.wrapper-form .tabs-register-box{margin:0 0 78px}.wrapper-form .tabs-register-box .tab-content{padding-top:100px}.wrapper-form .input-login-form{margin:90px 23px 0;width:85%}.wrapper-form .input-register-form{margin-left:-45%;width:85%}.wrapper-form .link-btn{padding-top:50px}.wrapper-form .facebook-text,.wrapper-form .google-text{padding-left:138px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
